import json

from aiogram import types, Bot, Dispatcher
from engine import GameEngine
from keyboards import Keyboards
import config

app = Bot(token=config.BOT_TOKEN, parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot=app)

game = GameEngine(True)
kbs = Keyboards()

@dp.message_handler(content_types=['text'], commands=['start'])
async def start(message: types.Message):
    player_is_busy = game.is_player_busy(message.from_user.id)
    if player_is_busy:
        text = '‚ôêÔ∏è <b>–î—É—Ä–∞–∫, —Ç—ã –µ—â–µ –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª –ø—Ä–æ—à–ª—É—é –∏–≥—Ä—É!</b>'
        return await message.answer(text)

    text = '‚ùî <b>–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É?</b>'
    keyboard = kbs.new_game()

@dp.callback_query_handler(lambda query: json.loads(query.data)['action'] == 'new_game')
async def new_game(query: types.CallbackQuery):
    data = json.loads(query.data)
    player_is_busy = game.is_player_busy(query.from_user.id)
    if player_is_busy:
        text = '‚ôêÔ∏è –î—É—Ä–∞–∫, —Ç—ã –µ—â–µ –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª –ø—Ä–æ—à–ª—É—é –∏–≥—Ä—É!'
        return await app.answer_callback_query(query.id, text, show_alert=True)

    if 'diag' not in data:
        text = '<b>–í—ã–±–µ—Ä–∏ —Ä–∞–∑–º–µ—Ä –ø–æ–ª—è, —à–∞–∫–∞–ª –µ–±–∞–Ω—ã–π</b> ‚§µÔ∏è'
        kb = kbs.new_game_categories()
        return await app.edit_message_text(text, query.message.chat.id, query.message.message_id, reply_markup=kb)

    text = f'<b>–ü—Ä–∏–Ω—è—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–≥—Ä—É –æ—Ç –¥–µ–±–∏–ª–∞?</b>\n\n<b>–ü–æ–ª–µ</b>: <code>{data["diag"]}x{data["diag"]}</code>'
    kb = kbs.accept_game_keyboard(board=data['diag'])
    await app.edit_message_text(text, query.message.chat.id, query.message.message_id, reply_markup=kb)

@dp.callback_query_handler(lambda query: json.loads(query.data)['action'] == 'accept_game')
async def accept_game(query: types.CallbackQuery):
    data = json.loads(query.data)

    if query.from_user.id == query.message.from_user.id:
        text = '–î–æ–ª–±–æ–µ–±, —Ç—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–∏–ª –≤—Å–µ–º –∏–≥—Ä–∞—Ç—å...'
        return await app.answer_callback_query(query.id, text, show_alert=True)

    game_object = game.new_game([query.message.from_user.id, query.from_user.id], data['diag'])

    text = f'''
    üí¨ <b>–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!</b>
    
    ‚ö∞Ô∏è <b>–ü–æ–ª–µ</b>: {data['diag']}x{data['diag']}
    
    üë§ <b>–ò–≥—Ä–æ–∫–∏</b>:
    ‚îú {query.message.from_user.first_name}
    ‚îî {query.from_user.first_name}
    '''

    kb = kbs.board_keyboard(0, game_object.board)
    await app.edit_message_text(text, query.message.chat.id, query.message.message_id, reply_markup=kb)


@dp.callback_query_handler(lambda query: json.loads(query.data)['action'] == 'select')
async def select_cell(query: types.CallbackQuery):
    data = json.loads(query.data)
